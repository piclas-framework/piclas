! =============================================================================== !
! EQUATION (linearscalaradvection)
! =============================================================================== !
IniExactFunc = 0

! =============================================================================== !
! DISCRETIZATION
! =============================================================================== !
N        = 1  ! Polynomial degree of computation to represent to solution
NAnalyze = 1  ! Polynomial degree at which analysis is performed

! =============================================================================== !
! MESH
! =============================================================================== !
MeshFile = Reggie_mesh.h5  ! (relative) path to meshfile

! =============================================================================== !
! OUTPUT / VISUALIZATION
! =============================================================================== !
ProjectName     = Surf_Flux_2D_tracking_Reggie    ! Name of the current simulation
TrackingMethod  = triatracking  ! Define Method that is used for tracking of particle

TimeStampLength = 11

NVisu = 1 

! =============================================================================== !
! CALCULATION
! =============================================================================== !
! Time
TEnd                  = 1E-5  ! End time [s] of the simulation
ManualTimeStep        = 5E-8 ! Manual timestep [s]
IterDisplayStep       = 10     ! Step size of iteration that are displayed
Particles-HaloEpsVelo = 8.0E+4  ! Halo region velocity [m/s]
CFLscale              = 0.2     ! Scaling factor for the theoretical CFL number

! Load Balancing
Particles-MPIWeight                      = 1000  ! Define weight of particles for elem loads.
DoLoadBalance                            = T     ! Set flag for doing dynamic LoadBalance. (needs compiled PICLAS_LOADBALANCE=ON)
PartWeightLoadBalance                    = T     ! Set flag for doing LoadBalance with partMPIWeight instead of elemtimes.
DoInitialAutoRestart                     = T     ! Set Flag for doing automatic initial restart with loadbalancing routines
InitialAutoRestart-PartWeightLoadBalance = T     ! Set flag for doing initial auto restart with partMPIWeight instead of ElemTimes.
LoadBalanceMaxSteps                      = 100     ! Define number of maximum load balacing steps that are allowed.
UseH5IOLoadBalance = T

! Output
Analyze_dt                        = 1E-5 ! Specifies time interval at which analysis routines are called
Part-WriteMacroValues             = F       ! Set [T] to activate ITERATION DEPENDANT h5 output of macroscopic values sampled (Can not be enabled together with Part-TimeFracForSampling)
Part-IterationForMacroVal         = 10    ! Set number of iterations used for sampling                   (Can not be enabled together with Part-TimeFracForSampling)
Particles-DSMC-CalcSurfaceVal     = F       ! Set [T] to activate sampling, analyze and h5 output for surfaces. (forced to be true if Part-WriteMacroValues is true)
Particles-DSMC-CalcQualityFactors = F       ! Enables / disables the calculation and output of quality factors
CalcSurfaceImpact                 = F       ! Sample average impact energy of particles, impact vector and angle.
Part-AnalyzeStep                  = 100 !Step at which PartAnalyze is printed
! Seeds
Part-NumberOfRandomSeeds = 2  ! Number of Seeds for Random Number Generator
Particles-RandomSeed1    = 1
Particles-RandomSeed2    = 2

! =============================================================================== !
! Analysis
! =============================================================================== !

CalcNumDens = T! Calculate the number density [1/m3] per species for the complete domain

! =============================================================================== !
! Boundaries
! =============================================================================== !
Part-nBounds               = 3           ! Number of particle boundaries
Part-Boundary1-SourceName  = ROTSYM
Part-Boundary1-Condition   = symmetric_dim
Part-Boundary2-SourceName  = SYMAXIS
Part-Boundary2-Condition   = symmetric_axis
Part-Boundary3-SourceName  = SF     ! Source Name of Boundary[$]
Part-Boundary3-Condition   = open        ! Define conditions for Boundary[$] (open, reflective, periodic, simple_anode, simple_cathode, rot_periodic)

! =============================================================================== !
! PARTICLES
! =============================================================================== !
Part-nSpecies          = 1                     ! Number of species used in calculation
Part-FIBGMdeltas       = (/1.0,1.0,1.0/)       ! Define the deltas for the Cartesian Fast-Init-Background-Mesh

! =============================================================================== !
! Species1 - O Engine
! =============================================================================== ! 

Part-Species1-SpeciesName       = O!Species name [$]
Part-Species1-InteractionID     = 1! ID for identification of particles (1: Atom, 2: Molecule, ...)
Part-Species1-Tref              = 273!Collision parameter: species-specific reference temperature [K] for VHS/VSS model
Part-Species1-dref              = 3.0E-10!Collision parameter: species-specific reference diameter [m] for VHS/VSS model
Part-Species1-omega             = 0.24! Collision parameter: species-specific temperature exponent for VHS/VSS model !CAUTION: omega = omega_bird1994 - 0.5!
Part-Species1-HeatOfFormation_K = 29969.88! Heat of formation of the respective species [K]

Part-Species1-MassIC              = 2.657E-26  ! Atomic mass [kg] of species [$]
Part-Species1-MacroParticleFactor = 1E8     ! Particle weighting factor: number of simulation particles per real particle for species [$]
Part-Species1-ChargeIC            = 0

! Initialization:
Part-Species1-nInits = 1 ! Number of different initial particle placements for species [$]
Part-Species1-Init1-SpaceIC = cell_local    ! Specifying keyword for particle space condition of species [$]
Part-Species1-Init1-MinimalLocation = (/ 0.0, 0.0, -0.5 /)
Part-Species1-Init1-MaximalLocation = (/  0.004,  0.004, 0.5 /)
Part-Species1-Init1-velocityDistribution = maxwell_lpn   ! Specifying keyword for velocity distribution 
Part-Species1-Init1-MWTemperatureIC = 500          ! Temperature [K] for Maxwell distribution
Part-Species1-Init1-PartDensity = 7.243E19     ! Number density [1/mÂ³] (real particles) 
Part-Species1-Init1-VeloIC = 0       ! Velocity magnitude [m/s]
Part-Species1-Init1-VeloVecIC = (/1.,0.,0./)  ! Normalized velocity vector
Part-Species1-Init1-TempVib              = 500
Part-Species1-Init1-TempRot              = 500

! Surface Flux:
Part-Species1-nSurfaceFluxBCs = 1  ! Number of surface flux emissions per species 

Part-Species1-Surfaceflux1-BC                   = 3            ! PartBound to be emitted from (select boundary from which it should flow in)
Part-Species1-Surfaceflux1-velocityDistribution = maxwell_lpn
Part-Species1-Surfaceflux1-MWTemperatureIC= 500!Temperature [K] for Maxwell distribution
Part-Species1-Surfaceflux1-PartDensity          = 7.243E19
Part-Species1-Surfaceflux1-VeloIC               = 0
Part-Species1-Surfaceflux1-VeloVecIC            = (/1.,0.,0./)
Part-Species1-Surfaceflux1-TempVib              = 500
Part-Species1-Surfaceflux1-TempRot              = 500

! =============================================================================== !
! DSMC
! =============================================================================== !
UseDSMC                    = T     ! Flag for using DSMC in Calculation
Particles-DSMC-CollisMode  = 1     ! Define mode of collision handling in DSMC (1:elast coll, 2: elast + rela, 3:chem)

! Octree
Particles-DSMC-UseOctree           = T   ! Use octree method for dynamic grid resolution based on the current mean free path and the particle number
Particles-DSMC-UseNearestNeighbour = T   ! Enable/disable the nearest neighbour search algorithm

! Symmetry
Particles-Symmetry-Order         = 2  ! Activating a 2D simulation on a mesh with one cell in z-direction in the xy-plane (y ranging from 0 to the domain boundaries)
Particles-Symmetry2DAxisymmetric = T  ! Activating an axisymmetric simulation

! Particle Weighting
Part-Weight-Type                = radial
Part-Weight-CloneMode           = 2
Part-Weight-CloneDelay          = 5
! Radial weighting
Part-Weight-Radial-ScaleFactor  = 50
