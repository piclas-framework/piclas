! =============================================================================== !
! EQUATION (linearscalaradvection)
! =============================================================================== !
IniExactFunc = 0

! =============================================================================== !
! DISCRETIZATION
! =============================================================================== !
N        = 1  ! Polynomial degree of computation to represent to solution
NAnalyze = 1  ! Polynomial degree at which analysis is performed

! =============================================================================== !
! MESH
! =============================================================================== !
MeshFile = 70degCone_2D_mesh.h5  ! (relative) path to meshfile

! =============================================================================== !
! OUTPUT / VISUALIZATION
! =============================================================================== !
ProjectName     = dsmc_cone     ! Name of the current simulation
TrackingMethod  = triatracking  ! Define Method that is used for tracking of particle
ColoredOutput   = F
TimeStampLength = 13

! =============================================================================== !
! CALCULATION
! =============================================================================== !
! Time
TEnd                  = 2.0E-3  ! End time [s] of the simulation
ManualTimeStep        = 2.0E-7  ! Manual timestep [s]
IterDisplayStep       = 100     ! Step size of iteration that are displayed
Particles-HaloEpsVelo = 8.0E+4  ! Halo region velocity [m/s]
CFLscale              = 0.2     ! Scaling factor for the theoretical CFL number
! Load Balancing
Particles-MPIWeight                      = 1000  ! Define weight of particles for elem loads.
DoLoadBalance                            = T     ! Set flag for doing dynamic LoadBalance. (needs compiled PICLAS_LOADBALANCE=ON)
PartWeightLoadBalance                    = T     ! Set flag for doing LoadBalance with partMPIWeight instead of elemtimes.
DoInitialAutoRestart                     = T     ! Set Flag for doing automatic initial restart with loadbalancing routines
InitialAutoRestart-PartWeightLoadBalance = T     ! Set flag for doing initial auto restart with partMPIWeight instead of ElemTimes.
LoadBalanceMaxSteps                      = 2     ! Define number of maximum load balacing steps that are allowed.
! Output
Analyze_dt                        = 2.5E-4  ! Specifies time interval at which analysis routines are called
!Part-TimeFracForSampling          = 0.5     ! Sampling starts after TEnd*(1-Part-TimefracForSampling) (Can not be enabled together with Part-WriteMacroValues)
!Particles-NumberForDSMCOutputs    = 2       ! Give the number of outputs for time fraction sampling   (Can not be enabled together with Part-WriteMacroValues)
Part-WriteMacroValues             = T       ! Set [T] to activate ITERATION DEPENDANT h5 output of macroscopic values sampled (Can not be enabled together with Part-TimeFracForSampling)
Part-IterationForMacroVal         = 1250    ! Set number of iterations used for sampling                                      (Can not be enabled together with Part-TimeFracForSampling)
Particles-DSMC-CalcSurfaceVal     = T       ! Set [T] to activate sampling, analyze and h5 output for surfaces. (forced to be true if Part-WriteMacroValues is true)
Particles-DSMC-CalcQualityFactors = T       ! Enables / disables the calculation and output of quality factors
CalcSurfaceImpact                 = T       ! Sample average impact energy of particles, impact vector and angle.
! Seeds
Part-NumberOfRandomSeeds = 2  ! Number of Seeds for Random Number Generator
Particles-RandomSeed1    = 1
Particles-RandomSeed2    = 2
! Macroscopic restart
!Particles-MacroscopicRestart          = T                                             ! Utilize a macroscopic result to restart the simulation
!Particles-MacroscopicRestart-Filename = dsmc_cone_DSMCState_000.00200000000000000.h5  ! File name of the DSMCState to be utilized as the input for the particle insertation

! =============================================================================== !
! Analysis
! =============================================================================== !
!CalcNumSpec = T  ! Calculate the number of simulation particles per species for the complete domain
!CalcTemp    = T  ! Calculate the global tranlational temperature for all particle species

! =============================================================================== !
! Boundaries
! =============================================================================== !
! CGNS mesh
!Part-nBounds               = 5           ! Number of particle boundaries
! Gmsh mesh (2D mesh extruded with hopr)
Part-nBounds               = 6           ! Number of particle boundaries

Part-Boundary1-SourceName  = IN          ! Source Name of Boundary[$]
Part-Boundary1-Condition   = open        ! Define conditions for Boundary[$] (open, reflective, periodic, simple_anode, simple_cathode, rot_periodic)
Part-Boundary2-SourceName  = OUT
Part-Boundary2-Condition   = open
Part-Boundary3-SourceName  = WALL
Part-Boundary3-Condition   = reflective
Part-Boundary3-WallTemp    = 300         ! Wall temperature [K] of reflective particle boundary [$].
Part-Boundary3-TransACC    = 1           ! Translation accommodation coefficient of reflective particle boundary [$].
Part-Boundary3-MomentumACC = 1           ! Momentum accommodation coefficient of reflective particle boundary [$].
Part-Boundary3-VibACC      = 1           ! Vibrational accommodation coefficient of reflective particle boundary [$].
Part-Boundary3-RotACC      = 1           ! Rotational accommodation coefficient of reflective particle boundary [$].
Part-Boundary4-SourceName  = SYMAXIS
Part-Boundary4-Condition   = symmetric_axis
! CGNS mesh
!Part-Boundary5-SourceName  = ROTSYM
!Part-Boundary5-Condition   = symmetric
! Gmsh mesh (2D mesh extruded with hopr)
Part-Boundary5-SourceName  = LowerZ_BC
Part-Boundary5-Condition   = symmetric
Part-Boundary6-SourceName  = UpperZ_BC
Part-Boundary6-Condition   = symmetric

! =============================================================================== !
! PARTICLES
! =============================================================================== !
Part-maxParticleNumber = 500000                ! Maximum number of Particles per proc
Part-nSpecies          = 1                     ! Number of species used in calculation
Part-FIBGMdeltas       = (/0.001,0.001,0.01/)  ! Define the deltas for the Cartesian Fast-Init-Background-Mesh

! =============================================================================== !
! Species1 - N2
! =============================================================================== ! 
Part-Species1-MassIC              = 4.65E-26  ! Atomic mass [kg] of species [$]
Part-Species1-MacroParticleFactor = 1E10      ! Particle weighting factor: number of simulation particles per real particle for species [$]

Part-Species1-nInits = 1  ! Number of different initial particle placements for species [$]

Part-Species1-Init1-SpaceIC              = cell_local    ! Specifying keyword for particle space condition of species [$]
Part-Species1-Init1-velocityDistribution = maxwell_lpn   ! Specifying keyword for velocity distribution 
Part-Species1-Init1-MWTemperatureIC      = 13.3          ! Temperature [K] for Maxwell distribution
Part-Species1-Init1-TempVib              = 13.3          ! Vibrational temperature [K]
Part-Species1-Init1-TempRot              = 13.3          ! Rotational temperature [K]
Part-Species1-Init1-PartDensity          = 3.715E+20     ! Number density [1/mÂ³] (real particles)
Part-Species1-Init1-VeloIC               = 1502.57       ! Velocity magnitude [m/s]
Part-Species1-Init1-VeloVecIC            = (/1.,0.,0./)  ! Normalized velocity vector

Part-Species1-nSurfaceFluxBCs = 1  ! Number of surface flux emissions per species 

Part-Species1-Surfaceflux1-BC                   = 1            ! PartBound to be emitted from
Part-Species1-Surfaceflux1-velocityDistribution = maxwell_lpn
Part-Species1-Surfaceflux1-MWTemperatureIC      = 13.3
Part-Species1-Surfaceflux1-TempVib              = 13.3
Part-Species1-Surfaceflux1-TempRot              = 13.3
Part-Species1-Surfaceflux1-PartDensity          = 3.715E+20
Part-Species1-Surfaceflux1-VeloIC               = 1502.57
Part-Species1-Surfaceflux1-VeloVecIC            = (/1.,0.,0./)

! =============================================================================== !
! DSMC
! =============================================================================== !
UseDSMC                    = T     ! Flag for using DSMC in Calculation
Particles-DSMC-CollisMode  = 2     ! Define mode of collision handling in DSMC (1:elast coll, 2: elast + rela, 3:chem)
! Octree
Particles-DSMC-UseOctree           = T   ! Use octree method for dynamic grid resolution based on the current mean free path and the particle number
Particles-DSMC-UseNearestNeighbour = T   ! Enable/disable the nearest neighbour search algorithm
Particles-OctreePartNumNode        = 40  ! Resolve grid until the maximum number of particles in a subcell equals OctreePartNumNode
Particles-OctreePartNumNodeMin     = 28  ! Allow grid division until the minimum number of particles in a subcell is above OctreePartNumNodeMin
! Symmetry
Particles-Symmetry-Order         = 2  ! Activating a 2D simulation on a mesh with one cell in z-direction in the xy-plane (y ranging from 0 to the domain boundaries)
Particles-Symmetry2DAxisymmetric = T  ! Activating an axisymmetric simulation
! Radial Weighting
Particles-RadialWeighting                 = T   ! Activates a radial weighting in y for the axisymmetric simulation based on the particle position.
Particles-RadialWeighting-PartScaleFactor = 60  ! Axisymmetric radial weighting factor, defining the linear increase of the weighting factor
Particles-RadialWeighting-CloneMode       = 2   ! Select between methods for the delayed insertion of cloned (1: Chronological, 2: Random)
Particles-RadialWeighting-CloneDelay      = 5   ! Delay (number of iterations) before the stored cloned particles are inserted at the position they were cloned
